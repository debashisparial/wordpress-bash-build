#!/usr/bin/env bash
# Purpose - Script to create a wordpress site on Ubuntu using Nginx, Mariadb and PHP
# Author - Debashis Parial under GPL v3.0+
# ------------------------------------------------------------------
# Wordpress Installation

export NCURSES_NO_UTF8_ACS=1
{ apt-get -y install dialog
dialog --keep-tite --create-rc ~/.dialog
sed -i 's/^#*\use_colors\s.*$/use_colors = OFF/' ~/.dialog --keep-titerc
apt-get -y install jq
} > /dev/null 2>&1
dialog --keep-tite --title "Welcome" --msgbox "\nWordpress Installation with Ubuntu, Nginx, Mariadb & PHP alongwith LetsEncrypt SSL." 20 100 
msgs=("System Update...."  
"System Upgrade...."
     )
commands=('apt-get update'
'DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade'
		)
n=${#commands[@]}
i=0
while [ "$i" -le "$n" ]; do
    pct=$(( i * 100 / n )) # calculating progress percentage
    if [ $pct -eq 100 ]; then
        echo -e "XXX\n100\nSystem update success\nXXX" #if progress percentage is equal to 100% then show this message
	else
        echo -e "XXX\n$i\n${msgs[i]}\nXXX"
	fi
    echo "$pct"
    eval "${commands[i]}" > /dev/null 2>&1 #eval the output of the commands, 
    i=$((i + 1))
	sleep 1
done | dialog --keep-tite --title "System Environment" --gauge "System Update...." 20 100 0
dialog --keep-tite --title "Part I" --ok-label "Continue" --nocancel --msgbox "\nHostname addition, hosts file update, Time zone update, Sudo user addition & Add SSH key." 20 100 
pattern="(^[^.]+\.[^.]+\.[^.]+$)"
	while true; do
	  fqdn=$(dialog --keep-tite --title FQDN --ok-label "Continue" --nocancel --inputbox "Enter Fully Qualified Domain Name (FQDN)" 20 100 3>&1 1>&2 2>&3 3>&-)
	  if [[ -z "$fqdn" ]]; then
		dialog --keep-tite --title "ERROR!!" --ok-label "Continue" --nocancel --msgbox "\n Error! Hostname cannot be empty" 20 100 
		continue
	  elif [[ ! "${fqdn}" =~ ${pattern} ]]; then
		dialog --keep-tite --title "ERROR!!" --ok-label "Continue" --nocancel --msgbox "\n Error! Format incorrect" 20 100
		continue
	  fi
	  
	  # this lines will be executed only if the conditions passed
		hostnamectl set-hostname "$fqdn" && hostname -F /etc/hostname
		break
	done
hostname="$(hostname)"
domain="${hostname%%.*}"
ips=$(ip -o -4 addr show up primary scope global |
      while read -r num dev fam addr rest; do echo ${addr%/*}; done)
#if grep -R "$ips" /etc/hosts; then
#	sed -i "s/.*$ips.*/$ips $hostname $domain/" /etc/hosts
#else
#	echo -e "\n$ips $hostname $domain" >> /etc/hosts
#fi
if grep -R "$ips" /etc/hosts; then
        sed -i "/$ips/d;/^$/d" /etc/hosts
        echo -e "\n$ips $hostname $domain" >> /etc/hosts
else
        echo -e "\n$ips $hostname $domain" >> /etc/hosts
fi
#configuring Time Zone
msgs=("Gathering Time Zone info...."  
"Setting Time Zone..."
     )
commands=('ln -snf /usr/share/zoneinfo/$(curl -s https://ipapi.co/timezone) /etc/localtime'
'DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata'
		)
n=${#commands[@]}
i=0
while [ "$i" -le "$n" ]; do
    pct=$(( i * 100 / n )) # calculating progress percentage
    if [ $pct -eq 100 ]; then
        echo -e "XXX\n100\nTime Zone set to server time zone.\nXXX" #if progress percentage is equal to 100% then show this message
	else
        echo -e "XXX\n$i\n${msgs[i]}\nXXX"
	fi
    echo "$pct"
    eval "${commands[i]}" > /dev/null 2>&1 #eval the output of the commands, 
    i=$((i + 1))
	sleep 1
done | dialog --keep-tite --title "Time Zone Configuration" --gauge "Gathering Time Zone info...." 20 100 0
# Adding another sudo user apart from root. Root credentials can be security risk.
while true; do
  uname=$(dialog --keep-tite --title "Username" --ok-label "Continue" --nocancel --inputbox "Enter your username" 20 100 3>&1 1>&2 2>&3 3>&-)
  if [[ -z "$uname" ]]; then
    dialog --keep-tite --title "ERROR!!" --ok-label "Continue" --nocancel --msgbox "\n Error! Username cannot be empty" 20 100
    continue
  elif grep "${uname}" /etc/passwd >/dev/null 2>&1; then
    dialog --keep-tite --title "ERROR!!" --ok-label "Continue" --nocancel --msgbox "\n Error! Username exists, use another name" 20 100
    continue
  fi
  
  # this lines will be executed only if the conditions passed
	adduser --gecos "" --disabled-password "$uname" >/dev/null 2>&1
	break
done
pword=$(dialog --keep-tite --title "Password" --ok-label "Continue" --nocancel --inputbox "Enter your password" 20 100 3>&1 1>&2 2>&3 3>&-)
msgs=( "Creating user..."
"Adding to sudoers list"
"Disabling sudo passwd prompt"
     )
commands=('chpasswd <<<"$uname:$pword"'
'usermod -a -G sudo "$uname"'
'echo "$uname ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/noprompt-$uname'
         )
n=${#commands[@]}
i=0
while [ "$i" -le "$n" ]; do
    pct=$(( i * 100 / n )) # calculating progress percentage
    if [ $pct -eq 100 ]; then
        echo -e "XXX\n100\nUser $uname added!\nXXX" #if progress percentage is equal to 100% then show this message
	else
        echo -e "XXX\n$i\n${msgs[i]}\nXXX"
	fi
    echo "$pct"
    eval "${commands[i]}" > /dev/null 2>&1 #eval the output of the commands, 
    i=$((i + 1))
	sleep 1
done | dialog --keep-tite --title "Adding User" --gauge "Creating user..." 20 100 0
uhome=$(eval echo ~$uname)
pubkey=$(dialog --keep-tite --title "SSH Key" --ok-label "Continue" --nocancel --inputbox "\nEnter your SSH Pubkey" 20 100 3>&1 1>&2 2>&3 3>&-)
msgs=("Creating user's SSH directory..."  
"SSH directory permission update... "
"Adding SSH pubkey..."
"SSH pubkey permission update...."
"Changing SSH directory ownership..."
"Configuring ssshd_config file...."
"System update..."
     )
commands=('mkdir $uhome/.ssh'
'chmod 700 $uhome/.ssh'
'printf "%s" "$pubkey" > $uhome/.ssh/authorized_keys'
'chmod 600 $uhome/.ssh/authorized_keys'
'chown -Rh "$uname:$uname" $uhome/.ssh'
'sudo sed -i "s/^#*\PermitRootLogin\s.*$/PermitRootLogin no/;s/^#*\PubkeyAuthentication\s.*$/PubkeyAuthentication yes/;s/^#*\PasswordAuthentication\s.*$/PasswordAuthentication no/" /etc/ssh/sshd_config'
'sudo systemctl restart sshd'
         )
n=${#commands[@]}
i=0
while [ "$i" -le "$n" ]; do
    pct=$(( i * 100 / n ))
    if [ $pct -eq 100 ]; then
        echo -e "XXX\n100\nSSH for $uname configured successfully\nXXX"
	else
        echo -e "XXX\n$i\n${msgs[i]}\nXXX"
	fi
    echo "$pct"
    eval "${commands[i]}" > /dev/null 2>&1
    i=$((i + 1))
	sleep 1
done | dialog --keep-tite --title "User SSH Configuration" --gauge "\nCreating User's SSH Directory" 20 100 0
dialog --keep-tite --title "Part II" --msgbox "\nNginx, Mariadb and PHP installation & configuration." 20 100
msgs=("Preparing system environment...."
"Preparing system environment...."
"Preparing system environment...."
     )
commands=('curl -o $uhome/user_script https://raw.githubusercontent.com/debashisparial/wordpress-bash-build/main/user_script -L -s'
'chmod +x $uhome/user_script'
'chown -Rh $uname:$uname $uhome/user_script'
		)
n=${#commands[@]}
i=0
while [ "$i" -le "$n" ]; do
    pct=$(( i * 100 / n ))
    if [ $pct -eq 100 ]; then
        echo -e "XXX\n100\nSystem environment configured successfully\nXXX"
	else
        echo -e "XXX\n$i\n${msgs[i]}\nXXX"
	fi
    echo "$pct"
    eval "${commands[i]}" > /dev/null 2>&1
    i=$((i + 1))
	sleep 1
done | dialog --keep-tite --title "User Eenvironment" --gauge "Preparing system environment" 20 100 0
sudo -i -u "$uname" bash $uhome/user_script
